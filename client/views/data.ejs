<!DOCTYPE html>
<html>

<head>
  <title>Home | Content Management System</title>
  <%include ./partials/head%>
  <style>
    .hidden {
      display: none !important
    }
  </style>
</head>

<body class="privilege not-home" style="display: none">
  <%include ./partials/header%>
  <main role="main" class="mt-5 pt-5 mt-sm-5 pt-sm-2 pt-md-3 container">
    <div class="card border-light mx-1 mt-1">
      <h1 class="card-header bg-transparent">Data</h1>
      <div class="card-body">
        <!-- add button, and pagination options -->
        <div class="row justify-content-between">
          <div class="col-12 col-sm-auto">
            <div class="row">
              <div class="col-12 col-sm-auto">
                <a role="button" class="btn btn-primary" href="" id="addButton">
                  <i class="fa fa-plus" aria-hidden="true"></i>Add
                </a>
              </div>
              <div class="col-12 my-2 my-sm-0 col-sm-auto">
                <form class="form-inline mx-2" id="add" style="display: none">
                  <input type="text" class="form-control mb-2 mr-sm-2" id="addLetter" placeholder="Letter" required>
                  <input type="number" class="form-control mb-2 mr-sm-2" id="addFrequency" placeholder="Frequency"
                    step="0.0001" required>
                  <button type="submit" class="btn btn-primary mb-2" id="saveLetter">Save</button>
                </form>
              </div>
            </div>
          </div>
          <div class="col-12 col-sm-auto my-1">
            <div class="row form-group">
              <div class="col-5 col-sm-auto" style="margin-right: -1.4rem !important">
                <select class="selectpicker form-control" id="selectLimit">
                  <option value="3">3</option>
                  <option value="7" selected>7</option>
                  <option value="10">10</option>
                </select>
              </div>
              <div class="col-7 col-sm-auto my-auto rfs">Rows per page</div>
            </div>
          </div>
        </div>


        <div class="alert alert-success" id="alertData" style="display: none"></div>

        <div class="row justify-content-between">
          <div class="col-12 col-sm-auto">
            <form class="form-inline">
              <input type="text" class="form-control mb-2 mr-sm-2" id="letter" placeholder="Search letter">
              <input type="number" class="form-control mb-2 ml-sm-2" id="letter" placeholder="Search frequency"
                step="0.0001">
            </form>
          </div>
          <div class="col-12 col-sm-auto">
            <!-- PAGINATION -->
            <nav id="pagination" aria-label="Table page" class="table-responsive mb-2">
              <ul class="pagination text-center" id="pages"></ul>
            </nav>
          </div>
        </div>

        <div class="card border-light my-1">
          <div class="card-body">
            <!-- TABLE -->
            <!-- <div class="container"> -->
              <div class="table-responsive">
              <table class="table table-striped table-sm">
                <thead class="thead-dark">
                  <tr>
                    <th scope="col" class="th-sm">#</th>
                    <th scope="col" class="th-sm">Letter</th>
                    <th scope="col" class="th-sm">Frequency</th>
                    <th scope="col" class="th-sm">Actions</th>
                  </tr>
                </thead>
                <tbody id="data"></tbody>
              </table>
              </div>
            <!-- </div> -->
            <!-- Group by option -->
            <div class="row">
              <div class="custom-control custom-switch col-12 col-sm-2">
                <input class="custom-control-input" type="checkbox" id="groupBy" value="letter">
                <label class="custom-control-label" for="groupBy">
                  <b>Group by letter</b>
                </label>
              </div>
              <div class="col-12 col-sm-10" id="freqOptions" style="display: none">
                <div class="form-group">
                  <div class="row justify-content-center">
                    <label class="col-12 col-sm-3"><b>Frequency accumulator:</b></label>
                    <div class="col-12 col-sm-9 no-gutter" id="freqOpt"></div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    </div>
  </main>
  <% include ./partials/scripts %>
  <script type="text/javascript" src="/javascripts/user-privilege.js"></script>
  <script type="text/javascript">
    $(() => {
      setActiveTab('dataTab');

      const showFreqOpt = () => {
        const options = [
          { value: 'maxFreq', label: 'Maximum' },
          { value: 'minFreq', label: 'Minimum' },
          { value: 'sumFreq', label: 'Sum' },
          { value: 'avgFreq', label: 'Average' },
          { value: 'countFreq', label: 'Count' }
        ];
        const width = screen.width;
        let divClass = "custom-control custom-radio custom-control-inline";
        if (width < 600) divClass += " col-6";
        options.forEach((opt, index) => {
          let radios = [
            `<div class="${divClass}">`,
            `<input type="radio" id="${opt.value}" name="freq" class="custom-control-input" value="${opt.value}">`,
            `<label class="custom-control-label" for="${opt.value}">${opt.label}</label>`,
            '</div>'
          ];
          $("#freqOpt").append(radios.join('\n'));
        });
        $("#sumFreq").prop('checked', true);
        $("#freqOptions").fadeIn();
        $("td:nth-child(4)").addClass('hidden');
        $("th:nth-child(4)").addClass('hidden');
      }

      const apiData = 'http://localhost:3001/api/data';

      const getData = (limit = 7, current = 1, groupBy, accumulator) => {
        let skip = (current - 1) * Number(limit);
        $.ajax({
          url: apiData,
          method: "GET",
          beforeSend: req => {
            req.setRequestHeader('')
            req.setRequestHeader('Skip', skip);
            req.setRequestHeader('Limit', limit);
            if (groupBy) req.setRequestHeader('GroupBy', groupBy);
          }
        }).done(response => {
          showData(response.data, skip, accumulator);
          showPagination(current, response.numOfPages, limit, groupBy, accumulator);
        });
      };

      const showData = (data, skip = 0, accumulator) => {
        let keys = ["letter", "frequency"];
        if (accumulator) keys[1] = accumulator;
        $("#data > tr").remove();
        let table = $("#data");
        data.forEach((item, index) => {
          table.append(`<tr id="row${index + skip + 1}"></tr>`)
          let row = $(`#row${index + skip + 1}`);
          row.append(`<td>${index + skip + 1}</td>`);
          keys.forEach(key => {
            let content = item[key];
            if (typeof content == 'number') content = Number(content.toPrecision(5))
            row.append(`<td>${content}</td>`);
          })
          if (!$("#groupBy").is(":checked")) {
            let actions = `<td>`;
            actions += `<a href="" role="button" class="btn btn-success mr-1" id="edit${item._id}" class="edit"> <i class="fa fa-pencil-square-o" aria-hidden="true"></i></a>`;
            actions += `<a href="" role="button" class="btn btn-danger" id="delete${item._id}" class="delete"> <i class="fa fa-trash" aria-hidden="true"></i></a>`;
            actions += `</td>`
            row.append(actions)
          }
        });
      };

      const showPagination = (current, numOfPages, limit, groupBy, accumulator) => {
        $(".page-item").remove();
        current = Number(current);
        numOfPages = Number(numOfPages);
        const liStart = '<li class="page-item">';
        const liEnd = '</li>';
        // first
        if (current > 4) {
          $("#pages").append(
            `${liStart}<a href="" id="firstPage" class="page-link">
          <span class="fa fa-fast-backward" aria-hidden="true"></span>
        </a>${liEnd}`
          )
        }
        // previous
        if (current > 1) {
          $("#pages").append(
            `${liStart}<a href="" id="previous" class="page-link">
          <span class="fa fa-backward" aria-hidden="true"></span>
        </a>${liEnd}`
          )
        }

        let i = current > 4 ? current - 2 : 1;
        // left ellipsis
        if (i !== 1) {
          $("#pages").append(`${liStart}<a href="" id="leftEllipsis" class="page-link">...</a>${liEnd}`)
        }
        let upper = current > numOfPages - 4 ? numOfPages : current + 2;
        for (; i <= upper && i <= numOfPages; i++) {
          if (i === current) {
            // active page
            $("#pages").append(`<li class="page-item active"><span class="page-link">${i}</span>${liEnd}`)
          } else {
            // nonactive page
            $("#pages").append(`${liStart}<a class="page-link" href="" id="page${i}">${i}</a>${liEnd}`);
          }
        }
        // right ellipsis
        if (i == current + 3 && i < numOfPages) {
          $("#pages").append(`${liStart}<a href="" id="rightEllipsis" class="page-link">...</a>${liEnd}`)
        }
        // next
        if (current < numOfPages) {
          $("#pages").append(
            `${liStart}<a href="" id="next" class="page-link">
              <span class="fa fa-forward" aria-hidden="true"></span>
              </a>${liEnd}`
          )
        }
        // last
        if (current < numOfPages - 3) {
          $("#pages").append(
            `${liStart}<a href="" id="lastPage" class="page-link">
              <span class="fa fa-fast-forward" aria-hidden="true"></span>
              </a>${liEnd}`
          )
        }

        $(".page-link").click(function (e) {
          e.preventDefault();
          const id = $(this).attr('id');
          const current = Number($("#pages > li.active > span").text());
          const validId = ['firstPage', 'previous', 'leftEllipsis', 'rightEllipsis', 'next', 'lastPage'];
          if (validId.includes(id)) {
            switch (id) {
              case 'firstPage': getData(limit, 1, groupBy, accumulator); break;
              case 'previous': getData(limit, current - 1, groupBy, accumulator); break;
              case 'leftEllipsis': getData(limit, current - 3, groupBy, accumulator); break;
              case 'rightEllipsis': getData(limit, current + 3, groupBy, accumulator); break;
              case 'next': getData(limit, current + 1, groupBy, accumulator); break;
              case 'lastPage': getData(limit, numOfPages, groupBy, accumulator); break;
            }
          } else if (id.slice(0, 4) == 'page') {
            const page = Number(id.slice(4));
            getData(limit, page, groupBy, accumulator);
          }
        });
      };

      const addData = limit => {
        const data = { letter: $("#addLetter").val(), frequency: $("#addFrequency").val() };
        $.ajax({
          url: apiData,
          method: "POST",
          data,
          dataType: "json"
        }).done(response => {
          $("#alertData").html(`<b>${response.message}</b>`).show();
          setTimeout(() => {
            $("#alertData").hide(2000)
          }, 7000)
          $("#addLetter").val("");
          $("#addFrequency").val("");
          getData(limit, 1);
        });
      }
      const elGroupBy = $("#groupBy");
      const selectLimit = $("#selectLimit");
      getData(selectLimit.val(), 1);

      elGroupBy.change(() => {
        let limit = selectLimit.val();
        let groupBy, accumulator;
        if (elGroupBy.is(":checked")) {
          showFreqOpt();
          groupBy = elGroupBy.val();
          const checked = $(`[name="freq"]`).toArray().filter(item => item.checked)[0];
          accumulator = checked.getAttribute("value");
        }
        else {
          $("#freqOptions").fadeOut();
          $(".custom-control-inline").remove();
          $("td:nth-child(4)").removeClass('hidden');
          $("th:nth-child(4)").removeClass('hidden');
        }
        getData(limit, 1, groupBy, accumulator);
      });

      $(`#freqOpt`).change(() => {
        let limit = selectLimit.val();
        let groupBy = elGroupBy.val();
        const checked = $(`[name="freq"]`).toArray().filter(item => item.checked)[0];
        accumulator = checked.getAttribute("value");
        getData(limit, 1, groupBy, accumulator);
      });

      selectLimit.change(() => {
        let limit = selectLimit.val();
        console.log('limit: ', limit)
        let groupBy = elGroupBy.is(":checked") ? elGroupBy.val() : undefined;
        const checked = $(`[name="freq"]`).toArray().filter(item => item.checked)[0];
        accumulator = checked ? checked.getAttribute("value") : undefined;
        getData(limit, 1, groupBy, accumulator);
      });

      $("#addButton").click(e => {
        e.preventDefault();
        $("#add").slideToggle();
      })

      $("#add").submit(e => {
        e.preventDefault();
        elGroupBy.prop('checked', false);
        $("#freqOptions").fadeOut();
        $(".custom-control-inline").remove();
        $("td:nth-child(4)").removeClass('hidden');
        $("th:nth-child(4)").removeClass('hidden');
        addData(selectLimit.val());
      });

      setInterval(() => {
        if (screen.width < 350) {
          $("td > .btn").addClass("btn-sm");
          $("td > a > .fa").addClass("fa-xs").removeClass("fa-sm");
        } else if (screen.width < 600) {
          $("td > .btn").addClass("btn-sm");
          $("td > a > .fa").addClass("fa-sm").removeClass("fa-xs");
        } else {
          $("td > .btn").removeClass("btn-sm");
          $("td > a > .fa").removeClass("fa-sm").removeClass("fa-xs");
        }
      }, 100)
    })
  </script>
</body>

</html>